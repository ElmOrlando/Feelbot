var _user$project$Main$userButton = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$p,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Want to contribute?'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Create an Account'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$userItem = function (user) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(user.displayName),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Ideas Contributed: ',
								_elm_lang$core$Basics$toString(user.ideaCount))),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$usersList = function (users) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _user$project$Main$userItem, users));
};
var _user$project$Main$usersSection = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Users'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Proudly experiencing emotions since 2017.'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$Main$usersList(model.users),
					_1: {
						ctor: '::',
						_0: _user$project$Main$userButton,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$feelButton = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$p,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Want to add a feel that\'s not listed?'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Create a Feel'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$feelIdeaItem = function (idea) {
	return A2(
		_elm_lang$html$Html$p,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(idea.description),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$feelIdeas = function (ideas) {
	return A2(
		_elm_lang$html$Html$ul,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _user$project$Main$feelIdeaItem, ideas));
};
var _user$project$Main$introText = '\n    Feelbot is here to help.\n\n    Feelbot is like Stack Overflow for developer feelings. It\'s a list of\n    common emotions that developers naturally tend to experience while engaging\n    in the practice of programming.\n\n    Each \"feel\" has a set of user-generated \"ideas\" associated with it. These\n    ideas could be voted up so that particularly relevant or strong ideas\n    appear at the top.\n\n    Example: A developer clicks the \"Overwhelmed\" feel, and the top ideas might\n    be something along the lines of \"Take a walk\", \"Drink some water\", or\n    \"Review your calendar and reduce commitments.\"\n    ';
var _user$project$Main$header = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$img,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$src('https://a.slack-edge.com/ae7f/plugins/hubot/assets/service_512.png'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$height(60),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h1,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Feelbot'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(_user$project$Main$introText),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ExperienceFeel':
				var _p1 = _p0._0;
				var newFeels = A2(
					_elm_lang$core$List$map,
					function (currentFeel) {
						return _elm_lang$core$Native_Utils.eq(currentFeel.id, _p1.id) ? _elm_lang$core$Native_Utils.update(
							_p1,
							{feltCount: _p1.feltCount + 1}) : currentFeel;
					},
					model.feels);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{feels: newFeels}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'RemoveFeelFromExperiencedness':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$feelEmoji = function (feel) {
	var _p2 = feel;
	switch (_p2.ctor) {
		case 'Angry':
			return 'üò†';
		case 'Confused':
			return 'üòï';
		case 'Fearful':
			return 'üò®';
		case 'Frustrated':
			return 'üòñ';
		case 'Overwhelmed':
			return 'üò£';
		case 'Reluctant':
			return 'üòØ';
		case 'Sad':
			return 'üò¢';
		case 'Tired':
			return 'üò´';
		case 'Unheard':
			return 'üò∂';
		case 'Unmotivated':
			return 'üòê';
		default:
			return 'üòü';
	}
};
var _user$project$Main$sampleIdeaData = {
	ctor: '::',
	_0: {id: 1, description: 'Take a walk.', voteCount: 1},
	_1: {
		ctor: '::',
		_0: {id: 2, description: 'Delete all your code.', voteCount: 10},
		_1: {ctor: '[]'}
	}
};
var _user$project$Main$sampleUserData = {
	ctor: '::',
	_0: {
		id: 1,
		avatar: '',
		displayName: 'Bijan',
		feelCount: 1,
		feelsExperienced: {ctor: '[]'},
		ideaCount: 1,
		ideasCreated: {ctor: '[]'},
		username: 'bijanbwb'
	},
	_1: {ctor: '[]'}
};
var _user$project$Main$Model = F2(
	function (a, b) {
		return {feels: a, users: b};
	});
var _user$project$Main$User = F8(
	function (a, b, c, d, e, f, g, h) {
		return {id: a, avatar: b, displayName: c, feelCount: d, feelsExperienced: e, ideaCount: f, ideasCreated: g, username: h};
	});
var _user$project$Main$Feel = F5(
	function (a, b, c, d, e) {
		return {id: a, emoji: b, feltCount: c, ideas: d, name: e};
	});
var _user$project$Main$Idea = F3(
	function (a, b, c) {
		return {id: a, description: b, voteCount: c};
	});
var _user$project$Main$Worried = {ctor: 'Worried'};
var _user$project$Main$Unmotivated = {ctor: 'Unmotivated'};
var _user$project$Main$Unheard = {ctor: 'Unheard'};
var _user$project$Main$Tired = {ctor: 'Tired'};
var _user$project$Main$Sad = {ctor: 'Sad'};
var _user$project$Main$Reluctant = {ctor: 'Reluctant'};
var _user$project$Main$Overwhelmed = {ctor: 'Overwhelmed'};
var _user$project$Main$Frustrated = {ctor: 'Frustrated'};
var _user$project$Main$Fearful = {ctor: 'Fearful'};
var _user$project$Main$Confused = {ctor: 'Confused'};
var _user$project$Main$Angry = {ctor: 'Angry'};
var _user$project$Main$sampleFeelData = {
	ctor: '::',
	_0: {
		id: 1,
		emoji: _user$project$Main$feelEmoji(_user$project$Main$Tired),
		feltCount: 0,
		ideas: {
			ctor: '::',
			_0: {id: 1, description: 'Take a walk.', voteCount: 1},
			_1: {ctor: '[]'}
		},
		name: 'Tired'
	},
	_1: {
		ctor: '::',
		_0: {
			id: 100,
			emoji: _user$project$Main$feelEmoji(_user$project$Main$Angry),
			feltCount: 10,
			ideas: {
				ctor: '::',
				_0: {id: 1, description: 'Delete all your code.', voteCount: 1},
				_1: {ctor: '[]'}
			},
			name: 'Angry'
		},
		_1: {
			ctor: '::',
			_0: {
				id: 999,
				emoji: _user$project$Main$feelEmoji(_user$project$Main$Unmotivated),
				feltCount: 999,
				ideas: {
					ctor: '::',
					_0: {id: 1, description: 'Read a book.', voteCount: 1},
					_1: {ctor: '[]'}
				},
				name: 'Unmotivated'
			},
			_1: {ctor: '[]'}
		}
	}
};
var _user$project$Main$initialModel = {feels: _user$project$Main$sampleFeelData, users: _user$project$Main$sampleUserData};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$RemoveFeelFromExperiencedness = function (a) {
	return {ctor: 'RemoveFeelFromExperiencedness', _0: a};
};
var _user$project$Main$ExperienceFeel = function (a) {
	return {ctor: 'ExperienceFeel', _0: a};
};
var _user$project$Main$feelItem = function (feel) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							feel.emoji,
							A2(_elm_lang$core$Basics_ops['++'], ' ', feel.name))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$Main$ExperienceFeel(feel)),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('I have indeed experienced this feel.'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(feel.feltCount)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$Main$feelIdeas(feel.ideas),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$feelsList = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(_elm_lang$core$List$map, _user$project$Main$feelItem, model.feels));
};
var _user$project$Main$feelsSection = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Feel Selector'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Experiencing a feel?'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$Main$feelsList(model),
					_1: {
						ctor: '::',
						_0: _user$project$Main$feelButton,
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Main$header(model),
			_1: {
				ctor: '::',
				_0: _user$project$Main$feelsSection(model),
				_1: {
					ctor: '::',
					_0: _user$project$Main$usersSection(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{view: _user$project$Main$view, init: _user$project$Main$init, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
var _user$project$Main$NoOp = {ctor: 'NoOp'};
